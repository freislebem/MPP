// <auto-generated />
using System;
using DiarioDePesca.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DiarioDePesca.Migrations
{
    [DbContext(typeof(EspecieContext))]
    [Migration("20190809021351_OutrasEntidades")]
    partial class OutrasEntidades
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.0-rtm-35687")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("DiarioDePesca.Models.Anzol", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Descricao");

                    b.HasKey("Id");

                    b.ToTable("Anzol");
                });

            modelBuilder.Entity("DiarioDePesca.Models.CondicaoDia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Descricao");

                    b.HasKey("Id");

                    b.ToTable("CondicaoDia");
                });

            modelBuilder.Entity("DiarioDePesca.Models.CorAgua", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Descricao");

                    b.HasKey("Id");

                    b.ToTable("CorAgua");
                });

            modelBuilder.Entity("DiarioDePesca.Models.Diario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Anzol");

                    b.Property<string>("Cidade");

                    b.Property<string>("CondicaoDia");

                    b.Property<int?>("CondicaoDiasId");

                    b.Property<string>("CorAgua");

                    b.Property<int?>("CorAguasId");

                    b.Property<DateTime>("DtaPescaria");

                    b.Property<DateTime>("DtaRegistro");

                    b.Property<DateTime>("HorMareCheia");

                    b.Property<DateTime>("HorMareVazia");

                    b.Property<string>("Local");

                    b.Property<string>("Lua");

                    b.Property<double>("MareCheia");

                    b.Property<double>("MareVazia");

                    b.Property<string>("Obs");

                    b.Property<string>("Praia");

                    b.Property<double>("Pressao");

                    b.Property<double>("Temperatura");

                    b.Property<string>("Uf");

                    b.HasKey("Id");

                    b.HasIndex("CondicaoDiasId");

                    b.HasIndex("CorAguasId");

                    b.ToTable("Diario");
                });

            modelBuilder.Entity("DiarioDePesca.Models.Especie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Nome")
                        .IsRequired();

                    b.Property<string>("NomeB");

                    b.Property<string>("NomeCientifico");

                    b.HasKey("Id");

                    b.ToTable("Especie");
                });

            modelBuilder.Entity("DiarioDePesca.Models.Isca", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Descricao");

                    b.HasKey("Id");

                    b.ToTable("Isca");
                });

            modelBuilder.Entity("DiarioDePesca.Models.Item", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("AnzolId");

                    b.Property<int?>("DiarioId");

                    b.Property<int?>("EspecieId");

                    b.Property<int>("IdDiario");

                    b.Property<int>("IdEspecie");

                    b.Property<int?>("IscaId");

                    b.Property<double>("Pernada");

                    b.Property<double>("PesoMaiorPeixe");

                    b.Property<int>("Qtde");

                    b.Property<double>("TamanhoMaiorPeixe");

                    b.HasKey("Id");

                    b.HasIndex("AnzolId");

                    b.HasIndex("DiarioId");

                    b.HasIndex("EspecieId");

                    b.HasIndex("IscaId");

                    b.ToTable("Item");
                });

            modelBuilder.Entity("DiarioDePesca.Models.Diario", b =>
                {
                    b.HasOne("DiarioDePesca.Models.CondicaoDia", "CondicaoDias")
                        .WithMany()
                        .HasForeignKey("CondicaoDiasId");

                    b.HasOne("DiarioDePesca.Models.CorAgua", "CorAguas")
                        .WithMany()
                        .HasForeignKey("CorAguasId");
                });

            modelBuilder.Entity("DiarioDePesca.Models.Item", b =>
                {
                    b.HasOne("DiarioDePesca.Models.Anzol", "Anzol")
                        .WithMany()
                        .HasForeignKey("AnzolId");

                    b.HasOne("DiarioDePesca.Models.Diario", "Diario")
                        .WithMany("Items")
                        .HasForeignKey("DiarioId");

                    b.HasOne("DiarioDePesca.Models.Especie", "Especie")
                        .WithMany()
                        .HasForeignKey("EspecieId");

                    b.HasOne("DiarioDePesca.Models.Isca", "Isca")
                        .WithMany()
                        .HasForeignKey("IscaId");
                });
#pragma warning restore 612, 618
        }
    }
}
